* Tools
- sops-nix :: Secret management framework for NixOS
- age :: Simple, modern encryption tool
- age-plugin-fido2-hmac :: FIDO2 hardware token support for age

* Workflow Overview
1. Secrets are encrypted in [[file:../secrets/secrets.yaml]]
2. SOPS uses age keys for encryption/decryption
3. NixOS configuration references secrets via sops-nix
4. Deployment applies secrets with correct permissions

* Updating the secrets file
** Basic workflow
1. Edit secrets (requires decryption key):
   #+begin_src bash
   sops secrets/secrets.yaml
   #+end_src
2. Verify syntax:
   #+begin_src bash
   nixfmt secrets/secrets.yaml
   #+end_src
3. Commit encrypted changes:
   #+begin_src bash
   git add secrets/secrets.yaml
   git commit -m "Update secrets"
   #+end_src

** Testing changes
1. Dry-run deployment:
   #+begin_src bash
   nixos-rebuild test --flake .#hostname --show-trace
   #+end_src
2. Check secret permissions:
   #+begin_src bash
   sudo ls -l /run/secrets/
   #+end_src

* Adding keys
** Adding FIDO2 hardware keys
1. Generate new key pair:
   #+begin_src bash
   age-plugin-fido2-hmac -generate -output fido2-key.txt
   #+end_src
2. Add public key to ~/.sops.yaml:
   #+begin_src yaml
   public_key: "age1fido2-hmac:1CNQZTHQVMXP7...",
   #+end_src

** Adding SSH keys
1. Create age key from existing SSH key:
   #+begin_src bash
   age-plugin-ssh -gen-key -o ssh-age.key
   #+end_src
2. Add to SOPS configuration:
   #+begin_src yaml
   creation_rules:
     - path_regex: secrets/.*
       public_key: |
         ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI...
   #+end_src

* Key Rotation
** TODO Document key revocation process
** TODO Emergency re-encryption procedure
